大规模配置: 4x4 = 16个节点（4x4网格）
  SpikeSource0: 本地[0-15] + 跨PE神经元, 126个脉冲
  SpikeSource1: 本地[16-31] + 跨PE神经元, 126个脉冲
  SpikeSource2: 本地[32-47] + 跨PE神经元, 126个脉冲
  SpikeSource3: 本地[48-63] + 跨PE神经元, 108个脉冲
  SpikeSource4: 本地[64-79] + 跨PE神经元, 126个脉冲
  SpikeSource5: 本地[80-95] + 跨PE神经元, 126个脉冲
  SpikeSource6: 本地[96-111] + 跨PE神经元, 126个脉冲
  SpikeSource7: 本地[112-127] + 跨PE神经元, 108个脉冲
  SpikeSource8: 本地[128-143] + 跨PE神经元, 126个脉冲
  SpikeSource9: 本地[144-159] + 跨PE神经元, 126个脉冲
  SpikeSource10: 本地[160-175] + 跨PE神经元, 126个脉冲
  SpikeSource11: 本地[176-191] + 跨PE神经元, 108个脉冲
  SpikeSource12: 本地[192-207] + 跨PE神经元, 108个脉冲
  SpikeSource13: 本地[208-223] + 跨PE神经元, 108个脉冲
  SpikeSource14: 本地[224-239] + 跨PE神经元, 108个脉冲
  SpikeSource15: 本地[240-255] + 跨PE神经元, 96个脉冲
  节点0: 16x256权重矩阵
  节点1: 16x256权重矩阵
  节点2: 16x256权重矩阵
  节点3: 16x256权重矩阵
  节点4: 16x256权重矩阵
  节点5: 16x256权重矩阵
  节点6: 16x256权重矩阵
  节点7: 16x256权重矩阵
  节点8: 16x256权重矩阵
  节点9: 16x256权重矩阵
  节点10: 16x256权重矩阵
  节点11: 16x256权重矩阵
  节点12: 16x256权重矩阵
  节点13: 16x256权重矩阵
  节点14: 16x256权重矩阵
  节点15: 16x256权重矩阵
✅ 创建16个路由器完成
  节点0: 外部SpikeSource模式，权重地址0x10000000
  节点1: 外部SpikeSource模式，权重地址0x10008000
  节点2: 外部SpikeSource模式，权重地址0x10010000
  节点3: 外部SpikeSource模式，权重地址0x10018000
  节点4: 外部SpikeSource模式，权重地址0x10020000
  节点5: 外部SpikeSource模式，权重地址0x10028000
  节点6: 外部SpikeSource模式，权重地址0x10030000
  节点7: 外部SpikeSource模式，权重地址0x10038000
  节点8: 外部SpikeSource模式，权重地址0x10040000
  节点9: 外部SpikeSource模式，权重地址0x10048000
  节点10: 外部SpikeSource模式，权重地址0x10050000
  节点11: 外部SpikeSource模式，权重地址0x10058000
  节点12: 外部SpikeSource模式，权重地址0x10060000
  节点13: 外部SpikeSource模式，权重地址0x10068000
  节点14: 外部SpikeSource模式，权重地址0x10070000
  节点15: 外部SpikeSource模式，权重地址0x10078000
✅ 创建16个节点和16个NIC完成（4x4网格）
✅ 创建16个SpikeSource完成（4x4网格）
✅ 完成16个NIC连接和24个路由器连接
✅ 完成路由器间网络连接：24个连接
📊 启用统计信息收集：16个PE + 16个路由器
🎯 跨核通信测试：16个SpikeSource -> 16个PE

🎯 4x4网格目标:
1. ✅ WeightLoader预加载权重矩阵到内存
2. 🔥 16个SpikeSource直接连接到对应PE的external_spike_input端口
3. 🌐 16个PE间通过路由器网络通信
4. 🧠 PE从内存读取权重处理脉冲
5. 📊 验证4cores分层存储和跨PE权重连接
6. 🎯 验证4x4网格架构的正确性

🚀 运行4x4网格系统...
📡 架构: 16个SpikeSource→16个PE + 16个路由器网络 + 4cores分层存储
🎯 目标: 验证4x4网格的高性能分布式SNN架构
global_memory_controller, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
WeightLoader[WeightLoader:35]: 🔧 初始化WeightLoader
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 18)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=0
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=0，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=0
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为0
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点0]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_0_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_0_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_0_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_0_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 27)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=1
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=1，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=1
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为1
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点1]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_1_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_1_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_1_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_1_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 36)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=2
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=2，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=2
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为2
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点2]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_2_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_2_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_2_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_2_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 45)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=3
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=3，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=3
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为3
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点3]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_3_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_3_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_3_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_3_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 54)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=4
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=4，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=4
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为4
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点4]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_4_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_4_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_4_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_4_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 63)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=5
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=5，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=5
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为5
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点5]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_5_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_5_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_5_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_5_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 72)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=6
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=6，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=6
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为6
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点6]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_6_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_6_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_6_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_6_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 81)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=7
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=7，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=7
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为7
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点7]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_7_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_7_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_7_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_7_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 90)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=8
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=8，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=8
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为8
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点8]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_8_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_8_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_8_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_8_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 99)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=9
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=9，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=9
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为9
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点9]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_9_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_9_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_9_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_9_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 108)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=10
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=10，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=10
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为10
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点10]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_10_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_10_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_10_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_10_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 117)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=11
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=11，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=11
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为11
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点11]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_11_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_11_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_11_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_11_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 126)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=12
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=12，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=12
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为12
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点12]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_12_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_12_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_12_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_12_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 135)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=13
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=13，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=13
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为13
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点13]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_13_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_13_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_13_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_13_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 144)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=14
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=14，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=14
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为14
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点14]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_14_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_14_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_14_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_14_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
MultiCorePE[MultiCorePE:31]: 🚀 初始化MultiCorePE组件 (ID: 153)
MultiCorePE[MultiCorePE:61]: 🔧 多核PE配置: cores=4, neurons_per_core=4, total_neurons=16, node_id=15
MultiCorePE[MultiCorePE:65]: 🧠 神经元参数: v_thresh=0.100, v_reset=0.000, v_rest=0.000, tau_mem=20.0ms, t_ref=2
MultiCorePE[MultiCorePE:107]: ✅ MultiCorePE基础初始化完成
MultiCorePE[initializeStatistics:620]: 📊 初始化统计收集
MultiCorePE[initializeStatistics:632]: ✅ 统计收集初始化完成
MultiCorePE[initializeNetworkInterface:1325]: 🌐 初始化网络接口适配器
SnnNIC[SnnNIC:39]: 初始化SnnNIC组件，节点ID=15，直接链接模式=否
SnnNIC[SnnNIC:54]: 尝试加载网络接口...
SnnNIC[SnnNIC:61]: 未找到用户定义的linkcontrol，创建默认merlin.linkcontrol
SnnNIC[SnnNIC:75]: 🔧 LinkControl参数: port_name=network, job_id=0, job_size=1, logical_nid=15
SnnNIC[SnnNIC:84]: 网络接口创建成功，设置回调处理器
SnnNIC[SnnNIC:95]: SnnNIC初始化完成
SnnNIC[SnnNIC:103]: SnnNIC初始化完成
MultiCorePE[initializeNetworkInterface:1333]: ✅ 通过用户配置成功加载网络接口适配器
SnnNIC[setNodeId:202]: 更新节点ID为15
MultiCorePE[initializeNetworkInterface:1346]: 🔧 网络适配器将由SST框架自动初始化
MultiCorePE[initializeNetworkInterface:1348]: 🔗 网络接口配置完成: SnnNIC状态[节点15]: 发送脉冲=0, 接收脉冲=0, 发送包=0, 接收包=0, 待发送=0
MultiCorePE[initializeNetworkInterface:1352]: 🔗 开始注入方向链路到网络适配器
MultiCorePE[initializeNetworkInterface:1389]: ℹ️ 网络接口不是SnnNetworkAdapter类型，检查其他类型
MultiCorePE[initializeNetworkInterface:1393]: 🔗 其他网络接口模式：network端口可直接用于外部连接
MultiCorePE[initializeNetworkInterface:1394]: 💡 提示：可直接连接 MultiCorePE的SubComponent端口到外部路由器
pe_15_core0_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_15_core1_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_15_core2_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
pe_15_core3_mem_ctrl, WARNING: Loaded backend in legacy mode (from parameter set). Instead, load backend into this controller's 'backend' slot via ctrl.setSubComponent() in configuration.
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 162)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_0.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 163)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_1.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 164)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_2.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 165)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_3.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 166)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_4.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 167)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_5.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 168)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_6.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 169)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_7.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 170)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_8.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 171)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_9.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 172)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_10.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 173)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_11.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 174)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_12.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 175)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_13.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 176)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_14.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[SpikeSource:26]: 初始化SpikeSource组件 (ID: 177)
SpikeSource[SpikeSource:40]: 数据集参数: path=/home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_15.txt, format=TEXT, time_scale=1.000, offset=0, max_events=0, neurons_per_core=4
SpikeSource[SpikeSource:49]: 配置了输出链接
SpikeSource[SpikeSource:55]: 注册了时钟处理器，频率: 1MHz
SpikeSource[SpikeSource:70]: SpikeSource组件构造完成
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
SpikeSource[init:82]: 进入init阶段 0
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_15.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_15.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_15.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_15.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点15] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点15] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_14.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_14.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_14.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_14.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点14] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点14] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_13.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_13.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_13.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_13.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点13] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点13] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_4.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_4.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_4.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_4.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点4] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点4] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_3.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_3.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_3.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_3.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点3] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点3] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_2.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_2.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_2.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_2.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点2] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点2] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_0.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_0.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_0.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_0.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点0] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点0] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_1.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_1.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_1.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_1.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点1] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点1] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_5.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_5.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_5.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_5.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点5] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点5] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_6.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_6.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_6.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_6.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点6] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点6] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_7.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_7.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_7.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_7.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点7] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点7] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_8.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_8.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_8.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_8.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点8] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点8] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_9.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_9.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_9.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_9.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点9] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点9] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_10.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_10.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_10.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_10.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点10] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点10] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_11.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_11.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_11.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_11.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点11] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点11] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 0
MultiCorePE[init:152]: ⏰ 配置时钟频率: 1GHz
MultiCorePE[init:162]: 🔗 配置外部端口连接
MultiCorePE[initializeDirectionLinks:1299]: 🌐 初始化方向链路代理机制
MultiCorePE[initializeDirectionLinks:1321]: 🔗 方向链路代理配置完成: 0个活跃链路
MultiCorePE[initializeProcessingUnits:636]: 🔧 初始化4个SnnPE SubComponent核心
MultiCorePE[initializeProcessingUnits:660]: [core0] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_12.bin
MultiCorePE[initializeProcessingUnits:665]: [core0] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心0, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心0初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core0] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心0设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core0] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core1] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_12.bin
MultiCorePE[initializeProcessingUnits:665]: [core1] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心1, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心1初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core1] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心1设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core1] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core2] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_12.bin
MultiCorePE[initializeProcessingUnits:665]: [core2] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心2, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心2初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core2] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心2设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core2] memory link = none
MultiCorePE[initializeProcessingUnits:660]: [core3] 配置权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_12.bin
MultiCorePE[initializeProcessingUnits:665]: [core3] 槽位可按 API 加载: no
SnnPESubComponent[SnnPESubComponent:64]: 🔧 初始化SnnPE SubComponent (核心3, 4个神经元)
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[SnnPESubComponent:112]: ✅ SnnPE SubComponent核心3初始化完成
MultiCorePE[initializeProcessingUnits:679]: [core3] 匿名加载成功
SnnPESubComponent[setParentInterface:129]: 🔗 核心3设置父级接口
MultiCorePE[initializeProcessingUnits:693]: [core3] memory link = none
MultiCorePE[initializeProcessingUnits:705]: ✅ SnnPE SubComponent核心初始化完成（4个核心）
MultiCorePE[initializeInternalRing:722]: 🔗 初始化优化的内部环形互连
MultiCorePE[OptimizedInternalRing:113]: 🔗 初始化优化的内部环形网络: 4节点, 2 VCs, 8信用/VC
MultiCorePE[initializeTopology:178]: 🔗 环形拓扑初始化完成: 4节点双向环
MultiCorePE[OptimizedInternalRing:144]: ✅ 优化的环形网络初始化完成
MultiCorePE[initializeInternalRing:731]: ✅ 优化环形互连初始化完成（4节点，2 VCs，8信用/VC）
MultiCorePE[MultiCoreController:1078]: ⚖️ 多核控制器初始化: 4个核心
MultiCorePE[init:176]: ✅ MultiCorePE阶段0初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心0初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心0统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心0未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心1 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心1初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心1统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心1未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心2 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心2初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心2统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心2未加载StandardMem，将使用默认权重
SnnPESubComponent[init:133]: 🔄 核心3 init phase 0
SnnPESubComponent[initializeStatistics:692]: 📊 核心3初始化统计收集
SnnPESubComponent[initializeStatistics:706]: ✅ 核心3统计收集初始化完成
SnnPESubComponent[init:151]: ⚠️ 核心3未加载StandardMem，将使用默认权重
SnnNIC[init:285]: 🔄 SnnNIC[节点12] 初始化阶段0开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(0)
SnnNIC[init:293]: ✅ LinkControl.init(0)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点12] 网络接口初始化完成，阶段0
MultiCorePE[init:186]: ✅ 网络接口init(0)完成
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
SpikeSource[init:82]: 进入init阶段 1
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_15.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点15] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点15] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_14.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点14] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点14] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_13.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点13] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点13] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_4.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点4] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点4] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_3.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点3] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点3] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_2.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点2] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点2] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
WeightLoader[loadPerCoreFiles:254]: ✅ 按核心分文件加载完成: 模板 /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_{core}.bin
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_0.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点0] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点0] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_1.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点1] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点1] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_5.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点5] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点5] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_6.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点6] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点6] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_7.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点7] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点7] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_8.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点8] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点8] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_9.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点9] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点9] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_10.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点10] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点10] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_11.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点11] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点11] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 1
MultiCorePE[loadAndDistributeWeights:752]: 📥 加载权重文件: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_12.bin
MultiCorePE[loadAndDistributeWeights:757]: ✅ 权重加载和分布完成
MultiCorePE[init:192]: ✅ MultiCorePE阶段1初始化完成
SnnPESubComponent[init:133]: 🔄 核心0 init phase 1
SnnPESubComponent[init:133]: 🔄 核心1 init phase 1
SnnPESubComponent[init:133]: 🔄 核心2 init phase 1
SnnPESubComponent[init:133]: 🔄 核心3 init phase 1
SnnNIC[init:285]: 🔄 SnnNIC[节点12] 初始化阶段1开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(1)
SnnNIC[init:293]: ✅ LinkControl.init(1)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点12] 网络接口初始化完成，阶段1
MultiCorePE[init:202]: ✅ 网络接口init(1)完成
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
SpikeSource[init:82]: 进入init阶段 2
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点15] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点15] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点14] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点14] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点13] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点13] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点4] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点4] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点3] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点3] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点2] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点2] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点0] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点0] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点1] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点1] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点5] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点5] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点6] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点6] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点7] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点7] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点8] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点8] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点9] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点9] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点10] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点10] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点11] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点11] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 2
SnnPESubComponent[init:133]: 🔄 核心0 init phase 2
SnnPESubComponent[init:133]: 🔄 核心1 init phase 2
SnnPESubComponent[init:133]: 🔄 核心2 init phase 2
SnnPESubComponent[init:133]: 🔄 核心3 init phase 2
SnnNIC[init:285]: 🔄 SnnNIC[节点12] 初始化阶段2开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(2)
SnnNIC[init:293]: ✅ LinkControl.init(2)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点12] 网络接口初始化完成，阶段2
MultiCorePE[init:214]: ✅ 网络接口init(2)完成
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
SpikeSource[init:82]: 进入init阶段 3
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点15] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点15] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点14] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点14] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点13] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点13] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点4] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点4] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点3] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点3] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点2] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点2] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点0] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点0] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点1] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点1] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点5] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点5] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点6] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点6] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点7] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点7] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点8] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点8] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点9] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点9] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点10] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点10] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点11] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点11] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
MultiCorePE[init:142]: 🔄 MultiCorePE初始化阶段 3
SnnPESubComponent[init:133]: 🔄 核心0 init phase 3
SnnPESubComponent[init:133]: 🔄 核心1 init phase 3
SnnPESubComponent[init:133]: 🔄 核心2 init phase 3
SnnPESubComponent[init:133]: 🔄 核心3 init phase 3
SnnNIC[init:285]: 🔄 SnnNIC[节点12] 初始化阶段3开始
SnnNIC[init:288]: 🔧 调用LinkControl.init(3)
SnnNIC[init:293]: ✅ LinkControl.init(3)成功完成
SnnNIC[init:299]: ✅ SnnNIC[节点12] 网络接口初始化完成，阶段3
MultiCorePE[init:214]: ✅ 网络接口init(3)完成
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_15.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 96个事件
SpikeSource[setup:91]: 数据集加载成功，共96个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_14.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 108个事件
SpikeSource[setup:91]: 数据集加载成功，共108个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_13.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 108个事件
SpikeSource[setup:91]: 数据集加载成功，共108个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_12.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 108个事件
SpikeSource[setup:91]: 数据集加载成功，共108个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_11.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 108个事件
SpikeSource[setup:91]: 数据集加载成功，共108个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_10.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 126个事件
SpikeSource[setup:91]: 数据集加载成功，共126个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_9.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 126个事件
SpikeSource[setup:91]: 数据集加载成功，共126个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_8.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 126个事件
SpikeSource[setup:91]: 数据集加载成功，共126个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_7.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 108个事件
SpikeSource[setup:91]: 数据集加载成功，共108个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_6.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 126个事件
SpikeSource[setup:91]: 数据集加载成功，共126个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_5.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 126个事件
SpikeSource[setup:91]: 数据集加载成功，共126个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_4.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 126个事件
SpikeSource[setup:91]: 数据集加载成功，共126个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_3.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 108个事件
SpikeSource[setup:91]: 数据集加载成功，共108个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_2.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 126个事件
SpikeSource[setup:91]: 数据集加载成功，共126个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_1.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 126个事件
SpikeSource[setup:91]: 数据集加载成功，共126个事件
SpikeSource[setup:86]: 进入setup阶段
SpikeSource[loadDataset:162]: 开始加载数据集: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_spike_data_source_0.txt (格式: TEXT)
SpikeSource[loadTextFormat:230]: TEXT格式加载完成: 126个事件
SpikeSource[setup:91]: 数据集加载成功，共126个事件
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=240000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_15.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=244000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_15.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=248000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_15.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=252000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_15.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点15] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点15] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 15
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=224000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_14.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=228000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_14.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=232000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_14.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=236000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_14.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点14] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点14] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 14
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=208000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_13.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=212000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_13.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=216000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_13.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=220000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_13.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点13] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点13] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 13
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=64000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_4.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=68000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_4.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=72000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_4.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=76000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_4.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点4] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点4] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 4
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=48000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_3.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=52000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_3.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=56000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_3.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=60000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_3.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点3] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点3] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 3
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=32000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_2.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=36000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_2.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=40000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_2.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=44000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_2.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点2] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点2] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 2
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
WeightLoader[setup:61]: ✅ WeightLoader setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=0, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_0.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=4000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_0.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=8000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_0.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=12000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_0.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点0] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点0] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 0
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=16000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_1.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=20000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_1.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=24000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_1.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=28000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_1.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点1] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点1] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 1
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=80000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_5.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=84000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_5.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=88000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_5.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=92000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_5.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点5] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点5] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 5
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=96000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_6.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=100000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_6.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=104000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_6.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=108000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_6.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点6] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点6] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 6
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=112000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_7.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=116000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_7.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=120000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_7.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=124000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_7.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点7] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点7] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 7
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=128000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_8.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=132000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_8.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=136000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_8.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=140000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_8.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点8] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点8] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 8
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=144000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_9.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=148000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_9.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=152000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_9.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=156000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_9.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点9] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点9] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 9
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=160000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_10.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=164000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_10.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=168000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_10.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=172000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_10.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点10] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点10] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 10
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=176000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_11.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=180000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_11.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=184000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_11.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=188000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_11.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点11] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点11] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 11
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
MultiCorePE[setup:220]: 🔧 MultiCorePE setup阶段
SnnPESubComponent[setup:174]: 🔧 核心0 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=192000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心0未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心0权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_12.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心0 setup完成
SnnPESubComponent[setup:174]: 🔧 核心1 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=196000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心1未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心1权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_12.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心1 setup完成
SnnPESubComponent[setup:174]: 🔧 核心2 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=200000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心2未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心2权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_12.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心2 setup完成
SnnPESubComponent[setup:174]: 🔧 核心3 setup 进入
SnnPESubComponent[setup:175]: 🧩 参数: init_default_weight=0.500, fallback=0, merge_row=0, merge_cl=1, line=64B, base_addr=204000, N=4
SnnPESubComponent[setup:185]: ⚠️ 核心3未配置StandardMem，检查是否有直接权重文件
SnnPESubComponent[setup:189]: 🔧 核心3权重文件路径: /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_12.bin (将由WeightLoader加载)
SnnPESubComponent[setup:195]: ✅ SnnPE SubComponent核心3 setup完成
SnnNIC[setup:308]: 🔧 SnnNIC[节点12] 设置阶段开始
SnnNIC[setup:311]: 🔧 调用LinkControl.setup()
SnnNIC[setup:315]: ✅ LinkControl.setup()成功完成
SnnNIC[setup:322]: ✅ SnnNIC[节点12] 设置完成，模式=SimpleNetwork
MultiCorePE[setup:241]: ✅ 网络接口setup完成
MultiCorePE[setup:249]: 📊 MultiCorePE配置摘要:
MultiCorePE[setup:250]:    - 处理单元数: 4
MultiCorePE[setup:251]:    - 每核神经元数: 4
MultiCorePE[setup:252]:    - 总神经元数: 16
MultiCorePE[setup:253]:    - 节点ID: 12
MultiCorePE[setup:254]:    - NUMA优化: 启用
MultiCorePE[setup:255]:    - 测试流量: 启用
MultiCorePE[setup:257]: ✅ MultiCorePE setup完成
WeightLoader[onClockTick:81]: 🔄 在运行时第一个周期进行权重加载
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=0 post=0 addr=0x10000000 val=1.000000 pending=1
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=0 post=1 addr=0x10000004 val=1.000000 pending=2
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=0 post=2 addr=0x10000008 val=1.000000 pending=3
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=0 post=3 addr=0x1000000c val=1.000000 pending=4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=1 post=0 addr=0x10000010 val=1.000000 pending=5
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=1 post=1 addr=0x10000014 val=1.000000 pending=6
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=1 post=2 addr=0x10000018 val=1.000000 pending=7
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=1 post=3 addr=0x1000001c val=1.000000 pending=8
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=2 post=0 addr=0x10000020 val=1.000000 pending=9
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=2 post=1 addr=0x10000024 val=1.000000 pending=10
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=2 post=2 addr=0x10000028 val=1.000000 pending=11
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=2 post=3 addr=0x1000002c val=1.000000 pending=12
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=3 post=0 addr=0x10000030 val=1.000000 pending=13
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=3 post=1 addr=0x10000034 val=1.000000 pending=14
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=3 post=2 addr=0x10000038 val=1.000000 pending=15
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=0 pre=3 post=3 addr=0x1000003c val=1.000000 pending=16
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心0权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=0 post=0 addr=0x10008000 val=1.000000 pending=17
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=0 post=1 addr=0x10008004 val=1.000000 pending=18
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=0 post=2 addr=0x10008008 val=1.000000 pending=19
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=0 post=3 addr=0x1000800c val=1.000000 pending=20
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=1 post=0 addr=0x10008010 val=1.000000 pending=21
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=1 post=1 addr=0x10008014 val=1.000000 pending=22
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=1 post=2 addr=0x10008018 val=1.000000 pending=23
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=1 post=3 addr=0x1000801c val=1.000000 pending=24
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=2 post=0 addr=0x10008020 val=1.000000 pending=25
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=2 post=1 addr=0x10008024 val=1.000000 pending=26
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=2 post=2 addr=0x10008028 val=1.000000 pending=27
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=2 post=3 addr=0x1000802c val=1.000000 pending=28
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=3 post=0 addr=0x10008030 val=1.000000 pending=29
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=3 post=1 addr=0x10008034 val=1.000000 pending=30
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=3 post=2 addr=0x10008038 val=1.000000 pending=31
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=1 pre=3 post=3 addr=0x1000803c val=1.000000 pending=32
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心1权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=0 post=0 addr=0x10010000 val=1.000000 pending=33
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=0 post=1 addr=0x10010004 val=1.000000 pending=34
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=0 post=2 addr=0x10010008 val=1.000000 pending=35
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=0 post=3 addr=0x1001000c val=1.000000 pending=36
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=1 post=0 addr=0x10010010 val=1.000000 pending=37
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=1 post=1 addr=0x10010014 val=1.000000 pending=38
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=1 post=2 addr=0x10010018 val=1.000000 pending=39
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=1 post=3 addr=0x1001001c val=1.000000 pending=40
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=2 post=0 addr=0x10010020 val=1.000000 pending=41
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=2 post=1 addr=0x10010024 val=1.000000 pending=42
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=2 post=2 addr=0x10010028 val=1.000000 pending=43
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=2 post=3 addr=0x1001002c val=1.000000 pending=44
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=3 post=0 addr=0x10010030 val=1.000000 pending=45
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=3 post=1 addr=0x10010034 val=1.000000 pending=46
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=3 post=2 addr=0x10010038 val=1.000000 pending=47
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=2 pre=3 post=3 addr=0x1001003c val=1.000000 pending=48
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心2权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=0 post=0 addr=0x10018000 val=1.000000 pending=49
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=0 post=1 addr=0x10018004 val=1.000000 pending=50
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=0 post=2 addr=0x10018008 val=1.000000 pending=51
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=0 post=3 addr=0x1001800c val=1.000000 pending=52
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=1 post=0 addr=0x10018010 val=1.000000 pending=53
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=1 post=1 addr=0x10018014 val=1.000000 pending=54
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=1 post=2 addr=0x10018018 val=1.000000 pending=55
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=1 post=3 addr=0x1001801c val=1.000000 pending=56
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=2 post=0 addr=0x10018020 val=1.000000 pending=57
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=2 post=1 addr=0x10018024 val=1.000000 pending=58
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=2 post=2 addr=0x10018028 val=1.000000 pending=59
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=2 post=3 addr=0x1001802c val=1.000000 pending=60
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=3 post=0 addr=0x10018030 val=1.000000 pending=61
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=3 post=1 addr=0x10018034 val=1.000000 pending=62
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=3 post=2 addr=0x10018038 val=1.000000 pending=63
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=3 pre=3 post=3 addr=0x1001803c val=1.000000 pending=64
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心3权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=0 post=0 addr=0x10020000 val=1.000000 pending=65
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=0 post=1 addr=0x10020004 val=1.000000 pending=66
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=0 post=2 addr=0x10020008 val=1.000000 pending=67
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=0 post=3 addr=0x1002000c val=1.000000 pending=68
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=1 post=0 addr=0x10020010 val=1.000000 pending=69
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=1 post=1 addr=0x10020014 val=1.000000 pending=70
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=1 post=2 addr=0x10020018 val=1.000000 pending=71
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=1 post=3 addr=0x1002001c val=1.000000 pending=72
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=2 post=0 addr=0x10020020 val=1.000000 pending=73
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=2 post=1 addr=0x10020024 val=1.000000 pending=74
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=2 post=2 addr=0x10020028 val=1.000000 pending=75
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=2 post=3 addr=0x1002002c val=1.000000 pending=76
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=3 post=0 addr=0x10020030 val=1.000000 pending=77
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=3 post=1 addr=0x10020034 val=1.000000 pending=78
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=3 post=2 addr=0x10020038 val=1.000000 pending=79
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=4 pre=3 post=3 addr=0x1002003c val=1.000000 pending=80
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心4权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=0 post=0 addr=0x10028000 val=1.000000 pending=81
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=0 post=1 addr=0x10028004 val=1.000000 pending=82
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=0 post=2 addr=0x10028008 val=1.000000 pending=83
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=0 post=3 addr=0x1002800c val=1.000000 pending=84
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=1 post=0 addr=0x10028010 val=1.000000 pending=85
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=1 post=1 addr=0x10028014 val=1.000000 pending=86
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=1 post=2 addr=0x10028018 val=1.000000 pending=87
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=1 post=3 addr=0x1002801c val=1.000000 pending=88
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=2 post=0 addr=0x10028020 val=1.000000 pending=89
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=2 post=1 addr=0x10028024 val=1.000000 pending=90
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=2 post=2 addr=0x10028028 val=1.000000 pending=91
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=2 post=3 addr=0x1002802c val=1.000000 pending=92
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=3 post=0 addr=0x10028030 val=1.000000 pending=93
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=3 post=1 addr=0x10028034 val=1.000000 pending=94
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=3 post=2 addr=0x10028038 val=1.000000 pending=95
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=5 pre=3 post=3 addr=0x1002803c val=1.000000 pending=96
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心5权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=0 post=0 addr=0x10030000 val=1.000000 pending=97
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=0 post=1 addr=0x10030004 val=1.000000 pending=98
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=0 post=2 addr=0x10030008 val=1.000000 pending=99
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=0 post=3 addr=0x1003000c val=1.000000 pending=100
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=1 post=0 addr=0x10030010 val=1.000000 pending=101
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=1 post=1 addr=0x10030014 val=1.000000 pending=102
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=1 post=2 addr=0x10030018 val=1.000000 pending=103
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=1 post=3 addr=0x1003001c val=1.000000 pending=104
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=2 post=0 addr=0x10030020 val=1.000000 pending=105
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=2 post=1 addr=0x10030024 val=1.000000 pending=106
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=2 post=2 addr=0x10030028 val=1.000000 pending=107
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=2 post=3 addr=0x1003002c val=1.000000 pending=108
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=3 post=0 addr=0x10030030 val=1.000000 pending=109
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=3 post=1 addr=0x10030034 val=1.000000 pending=110
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=3 post=2 addr=0x10030038 val=1.000000 pending=111
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=6 pre=3 post=3 addr=0x1003003c val=1.000000 pending=112
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心6权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=0 post=0 addr=0x10038000 val=1.000000 pending=113
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=0 post=1 addr=0x10038004 val=1.000000 pending=114
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=0 post=2 addr=0x10038008 val=1.000000 pending=115
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=0 post=3 addr=0x1003800c val=1.000000 pending=116
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=1 post=0 addr=0x10038010 val=1.000000 pending=117
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=1 post=1 addr=0x10038014 val=1.000000 pending=118
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=1 post=2 addr=0x10038018 val=1.000000 pending=119
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=1 post=3 addr=0x1003801c val=1.000000 pending=120
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=2 post=0 addr=0x10038020 val=1.000000 pending=121
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=2 post=1 addr=0x10038024 val=1.000000 pending=122
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=2 post=2 addr=0x10038028 val=1.000000 pending=123
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=2 post=3 addr=0x1003802c val=1.000000 pending=124
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=3 post=0 addr=0x10038030 val=1.000000 pending=125
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=3 post=1 addr=0x10038034 val=1.000000 pending=126
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=3 post=2 addr=0x10038038 val=1.000000 pending=127
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=7 pre=3 post=3 addr=0x1003803c val=1.000000 pending=128
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心7权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=0 post=0 addr=0x10040000 val=1.000000 pending=129
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=0 post=1 addr=0x10040004 val=1.000000 pending=130
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=0 post=2 addr=0x10040008 val=1.000000 pending=131
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=0 post=3 addr=0x1004000c val=1.000000 pending=132
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=1 post=0 addr=0x10040010 val=1.000000 pending=133
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=1 post=1 addr=0x10040014 val=1.000000 pending=134
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=1 post=2 addr=0x10040018 val=1.000000 pending=135
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=1 post=3 addr=0x1004001c val=1.000000 pending=136
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=2 post=0 addr=0x10040020 val=1.000000 pending=137
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=2 post=1 addr=0x10040024 val=1.000000 pending=138
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=2 post=2 addr=0x10040028 val=1.000000 pending=139
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=2 post=3 addr=0x1004002c val=1.000000 pending=140
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=3 post=0 addr=0x10040030 val=1.000000 pending=141
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=3 post=1 addr=0x10040034 val=1.000000 pending=142
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=3 post=2 addr=0x10040038 val=1.000000 pending=143
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=8 pre=3 post=3 addr=0x1004003c val=1.000000 pending=144
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心8权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=0 post=0 addr=0x10048000 val=1.000000 pending=145
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=0 post=1 addr=0x10048004 val=1.000000 pending=146
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=0 post=2 addr=0x10048008 val=1.000000 pending=147
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=0 post=3 addr=0x1004800c val=1.000000 pending=148
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=1 post=0 addr=0x10048010 val=1.000000 pending=149
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=1 post=1 addr=0x10048014 val=1.000000 pending=150
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=1 post=2 addr=0x10048018 val=1.000000 pending=151
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=1 post=3 addr=0x1004801c val=1.000000 pending=152
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=2 post=0 addr=0x10048020 val=1.000000 pending=153
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=2 post=1 addr=0x10048024 val=1.000000 pending=154
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=2 post=2 addr=0x10048028 val=1.000000 pending=155
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=2 post=3 addr=0x1004802c val=1.000000 pending=156
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=3 post=0 addr=0x10048030 val=1.000000 pending=157
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=3 post=1 addr=0x10048034 val=1.000000 pending=158
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=3 post=2 addr=0x10048038 val=1.000000 pending=159
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=9 pre=3 post=3 addr=0x1004803c val=1.000000 pending=160
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心9权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=0 post=0 addr=0x10050000 val=1.000000 pending=161
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=0 post=1 addr=0x10050004 val=1.000000 pending=162
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=0 post=2 addr=0x10050008 val=1.000000 pending=163
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=0 post=3 addr=0x1005000c val=1.000000 pending=164
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=1 post=0 addr=0x10050010 val=1.000000 pending=165
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=1 post=1 addr=0x10050014 val=1.000000 pending=166
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=1 post=2 addr=0x10050018 val=1.000000 pending=167
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=1 post=3 addr=0x1005001c val=1.000000 pending=168
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=2 post=0 addr=0x10050020 val=1.000000 pending=169
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=2 post=1 addr=0x10050024 val=1.000000 pending=170
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=2 post=2 addr=0x10050028 val=1.000000 pending=171
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=2 post=3 addr=0x1005002c val=1.000000 pending=172
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=3 post=0 addr=0x10050030 val=1.000000 pending=173
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=3 post=1 addr=0x10050034 val=1.000000 pending=174
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=3 post=2 addr=0x10050038 val=1.000000 pending=175
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=10 pre=3 post=3 addr=0x1005003c val=1.000000 pending=176
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心10权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=0 post=0 addr=0x10058000 val=1.000000 pending=177
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=0 post=1 addr=0x10058004 val=1.000000 pending=178
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=0 post=2 addr=0x10058008 val=1.000000 pending=179
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=0 post=3 addr=0x1005800c val=1.000000 pending=180
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=1 post=0 addr=0x10058010 val=1.000000 pending=181
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=1 post=1 addr=0x10058014 val=1.000000 pending=182
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=1 post=2 addr=0x10058018 val=1.000000 pending=183
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=1 post=3 addr=0x1005801c val=1.000000 pending=184
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=2 post=0 addr=0x10058020 val=1.000000 pending=185
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=2 post=1 addr=0x10058024 val=1.000000 pending=186
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=2 post=2 addr=0x10058028 val=1.000000 pending=187
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=2 post=3 addr=0x1005802c val=1.000000 pending=188
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=3 post=0 addr=0x10058030 val=1.000000 pending=189
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=3 post=1 addr=0x10058034 val=1.000000 pending=190
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=3 post=2 addr=0x10058038 val=1.000000 pending=191
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=11 pre=3 post=3 addr=0x1005803c val=1.000000 pending=192
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心11权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=0 post=0 addr=0x10060000 val=1.000000 pending=193
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=0 post=1 addr=0x10060004 val=1.000000 pending=194
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=0 post=2 addr=0x10060008 val=1.000000 pending=195
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=0 post=3 addr=0x1006000c val=1.000000 pending=196
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=1 post=0 addr=0x10060010 val=1.000000 pending=197
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=1 post=1 addr=0x10060014 val=1.000000 pending=198
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=1 post=2 addr=0x10060018 val=1.000000 pending=199
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=1 post=3 addr=0x1006001c val=1.000000 pending=200
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=2 post=0 addr=0x10060020 val=1.000000 pending=201
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=2 post=1 addr=0x10060024 val=1.000000 pending=202
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=2 post=2 addr=0x10060028 val=1.000000 pending=203
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=2 post=3 addr=0x1006002c val=1.000000 pending=204
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=3 post=0 addr=0x10060030 val=1.000000 pending=205
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=3 post=1 addr=0x10060034 val=1.000000 pending=206
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=3 post=2 addr=0x10060038 val=1.000000 pending=207
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=12 pre=3 post=3 addr=0x1006003c val=1.000000 pending=208
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心12权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=0 post=0 addr=0x10068000 val=1.000000 pending=209
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=0 post=1 addr=0x10068004 val=1.000000 pending=210
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=0 post=2 addr=0x10068008 val=1.000000 pending=211
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=0 post=3 addr=0x1006800c val=1.000000 pending=212
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=1 post=0 addr=0x10068010 val=1.000000 pending=213
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=1 post=1 addr=0x10068014 val=1.000000 pending=214
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=1 post=2 addr=0x10068018 val=1.000000 pending=215
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=1 post=3 addr=0x1006801c val=1.000000 pending=216
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=2 post=0 addr=0x10068020 val=1.000000 pending=217
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=2 post=1 addr=0x10068024 val=1.000000 pending=218
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=2 post=2 addr=0x10068028 val=1.000000 pending=219
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=2 post=3 addr=0x1006802c val=1.000000 pending=220
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=3 post=0 addr=0x10068030 val=1.000000 pending=221
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=3 post=1 addr=0x10068034 val=1.000000 pending=222
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=3 post=2 addr=0x10068038 val=1.000000 pending=223
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=13 pre=3 post=3 addr=0x1006803c val=1.000000 pending=224
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心13权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=0 post=0 addr=0x10070000 val=1.000000 pending=225
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=0 post=1 addr=0x10070004 val=1.000000 pending=226
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=0 post=2 addr=0x10070008 val=1.000000 pending=227
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=0 post=3 addr=0x1007000c val=1.000000 pending=228
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=1 post=0 addr=0x10070010 val=1.000000 pending=229
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=1 post=1 addr=0x10070014 val=1.000000 pending=230
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=1 post=2 addr=0x10070018 val=1.000000 pending=231
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=1 post=3 addr=0x1007001c val=1.000000 pending=232
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=2 post=0 addr=0x10070020 val=1.000000 pending=233
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=2 post=1 addr=0x10070024 val=1.000000 pending=234
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=2 post=2 addr=0x10070028 val=1.000000 pending=235
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=2 post=3 addr=0x1007002c val=1.000000 pending=236
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=3 post=0 addr=0x10070030 val=1.000000 pending=237
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=3 post=1 addr=0x10070034 val=1.000000 pending=238
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=3 post=2 addr=0x10070038 val=1.000000 pending=239
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=14 pre=3 post=3 addr=0x1007003c val=1.000000 pending=240
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心14权重写入完成: 4 x 4
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=0 post=0 addr=0x10078000 val=1.000000 pending=241
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=0 post=1 addr=0x10078004 val=1.000000 pending=242
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=0 post=2 addr=0x10078008 val=1.000000 pending=243
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=0 post=3 addr=0x1007800c val=1.000000 pending=244
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=1 post=0 addr=0x10078010 val=1.000000 pending=245
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=1 post=1 addr=0x10078014 val=1.000000 pending=246
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=1 post=2 addr=0x10078018 val=1.000000 pending=247
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=1 post=3 addr=0x1007801c val=1.000000 pending=248
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=2 post=0 addr=0x10078020 val=1.000000 pending=249
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=2 post=1 addr=0x10078024 val=1.000000 pending=250
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=2 post=2 addr=0x10078028 val=1.000000 pending=251
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=2 post=3 addr=0x1007802c val=1.000000 pending=252
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=3 post=0 addr=0x10078030 val=1.000000 pending=253
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=3 post=1 addr=0x10078034 val=1.000000 pending=254
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=3 post=2 addr=0x10078038 val=1.000000 pending=255
WeightLoader[issueWritesForCoreFloatsRuntime:334]: 💾 运行时写入: core=15 pre=3 post=3 addr=0x1007803c val=1.000000 pending=256
WeightLoader[issueWritesForCoreFloatsRuntime:339]: ✅ 运行时核心15权重写入完成: 4 x 4
WeightLoader[loadPerCoreFilesRuntime:302]: ✅ 运行时按核心分文件加载完成: 模板 /home/anarchy/SST/snnDL_core_system_v2/datasets/4x4_weights_node_{core}.bin
SnnNIC[sendSpike:186]: 发送脉冲成功：节点15 -> 节点0，神经元240 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点15 -> 节点0，神经元241 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点15 -> 节点0，神经元242 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点15 -> 节点0，神经元243 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点14 -> 节点0，神经元224 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点14 -> 节点0，神经元225 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点14 -> 节点0，神经元226 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点14 -> 节点0，神经元227 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点13 -> 节点0，神经元208 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点13 -> 节点0，神经元209 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点13 -> 节点0，神经元210 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点13 -> 节点0，神经元211 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点4 -> 节点0，神经元64 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点4 -> 节点0，神经元65 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点4 -> 节点0，神经元66 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点4 -> 节点0，神经元67 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点3 -> 节点0，神经元48 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点3 -> 节点0，神经元49 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点3 -> 节点0，神经元50 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点3 -> 节点0，神经元51 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点2 -> 节点0，神经元32 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点2 -> 节点0，神经元33 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点2 -> 节点0，神经元34 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点2 -> 节点0，神经元35 (vn=0)
MultiCorePE[sendExternalSpike:502]: ⚠️ 试图向自身节点发送外部脉冲，丢弃: 源=0 目标=0 节点=0
MultiCorePE[sendExternalSpike:502]: ⚠️ 试图向自身节点发送外部脉冲，丢弃: 源=1 目标=1 节点=0
MultiCorePE[sendExternalSpike:502]: ⚠️ 试图向自身节点发送外部脉冲，丢弃: 源=2 目标=2 节点=0
MultiCorePE[sendExternalSpike:502]: ⚠️ 试图向自身节点发送外部脉冲，丢弃: 源=3 目标=3 节点=0
SnnNIC[sendSpike:186]: 发送脉冲成功：节点1 -> 节点0，神经元16 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点1 -> 节点0，神经元17 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点1 -> 节点0，神经元18 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点1 -> 节点0，神经元19 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点5 -> 节点0，神经元80 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点5 -> 节点0，神经元81 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点5 -> 节点0，神经元82 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点5 -> 节点0，神经元83 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点6 -> 节点0，神经元96 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点6 -> 节点0，神经元97 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点6 -> 节点0，神经元98 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点6 -> 节点0，神经元99 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点7 -> 节点0，神经元112 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点7 -> 节点0，神经元113 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点7 -> 节点0，神经元114 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点7 -> 节点0，神经元115 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点8 -> 节点0，神经元128 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点8 -> 节点0，神经元129 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点8 -> 节点0，神经元130 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点8 -> 节点0，神经元131 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点9 -> 节点0，神经元144 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点9 -> 节点0，神经元145 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点9 -> 节点0，神经元146 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点9 -> 节点0，神经元147 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点10 -> 节点0，神经元160 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点10 -> 节点0，神经元161 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点10 -> 节点0，神经元162 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点10 -> 节点0，神经元163 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点11 -> 节点0，神经元176 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点11 -> 节点0，神经元177 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点11 -> 节点0，神经元178 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点11 -> 节点0，神经元179 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点12 -> 节点0，神经元192 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点12 -> 节点0，神经元193 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点12 -> 节点0，神经元194 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点12 -> 节点0，神经元195 (vn=0)
SnnPESubComponent[processLocalSpike:549]: 🧪 一次性详细映射: pre_g=16->pre_l=0, post_g=0->post_l=0, base=0, off=0, addr=0, weight=0.000
SnnNIC[sendSpike:186]: 发送脉冲成功：节点15 -> 节点0，神经元240 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点15 -> 节点0，神经元241 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点15 -> 节点0，神经元242 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点15 -> 节点0，神经元243 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点14 -> 节点0，神经元224 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点14 -> 节点0，神经元225 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点14 -> 节点0，神经元226 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点14 -> 节点0，神经元227 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点13 -> 节点0，神经元208 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点13 -> 节点0，神经元209 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点13 -> 节点0，神经元210 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点13 -> 节点0，神经元211 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点4 -> 节点0，神经元64 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点4 -> 节点0，神经元65 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点4 -> 节点0，神经元66 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点4 -> 节点0，神经元67 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点3 -> 节点0，神经元48 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点3 -> 节点0，神经元49 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点3 -> 节点0，神经元50 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点3 -> 节点0，神经元51 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点2 -> 节点0，神经元32 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点2 -> 节点0，神经元33 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点2 -> 节点0，神经元34 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点2 -> 节点0，神经元35 (vn=0)
MultiCorePE[sendExternalSpike:502]: ⚠️ 试图向自身节点发送外部脉冲，丢弃: 源=0 目标=0 节点=0
MultiCorePE[sendExternalSpike:502]: ⚠️ 试图向自身节点发送外部脉冲，丢弃: 源=1 目标=1 节点=0
MultiCorePE[sendExternalSpike:502]: ⚠️ 试图向自身节点发送外部脉冲，丢弃: 源=2 目标=2 节点=0
MultiCorePE[sendExternalSpike:502]: ⚠️ 试图向自身节点发送外部脉冲，丢弃: 源=3 目标=3 节点=0
SnnNIC[sendSpike:186]: 发送脉冲成功：节点1 -> 节点0，神经元16 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点1 -> 节点0，神经元17 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点1 -> 节点0，神经元18 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点1 -> 节点0，神经元19 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点5 -> 节点0，神经元80 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点5 -> 节点0，神经元81 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点5 -> 节点0，神经元82 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点5 -> 节点0，神经元83 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点6 -> 节点0，神经元96 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点6 -> 节点0，神经元97 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点6 -> 节点0，神经元98 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点6 -> 节点0，神经元99 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点7 -> 节点0，神经元112 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点7 -> 节点0，神经元113 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点7 -> 节点0，神经元114 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点7 -> 节点0，神经元115 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点8 -> 节点0，神经元128 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点8 -> 节点0，神经元129 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点8 -> 节点0，神经元130 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点8 -> 节点0，神经元131 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点9 -> 节点0，神经元144 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点9 -> 节点0，神经元145 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点9 -> 节点0，神经元146 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点9 -> 节点0，神经元147 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点10 -> 节点0，神经元160 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点10 -> 节点0，神经元161 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点10 -> 节点0，神经元162 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点10 -> 节点0，神经元163 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点11 -> 节点0，神经元176 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点11 -> 节点0，神经元177 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点11 -> 节点0，神经元178 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点11 -> 节点0，神经元179 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点12 -> 节点0，神经元192 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点12 -> 节点0，神经元193 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点12 -> 节点0，神经元194 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点12 -> 节点0，神经元195 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点15 -> 节点0，神经元240 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点15 -> 节点0，神经元241 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点14 -> 节点0，神经元224 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点14 -> 节点0，神经元225 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点13 -> 节点0，神经元208 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点13 -> 节点0，神经元209 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点4 -> 节点0，神经元64 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点4 -> 节点0，神经元65 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点3 -> 节点0，神经元48 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点3 -> 节点0，神经元49 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点2 -> 节点0，神经元32 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点2 -> 节点0，神经元33 (vn=0)
MultiCorePE[sendExternalSpike:502]: ⚠️ 试图向自身节点发送外部脉冲，丢弃: 源=0 目标=0 节点=0
MultiCorePE[sendExternalSpike:502]: ⚠️ 试图向自身节点发送外部脉冲，丢弃: 源=1 目标=1 节点=0
SnnNIC[sendSpike:186]: 发送脉冲成功：节点1 -> 节点0，神经元16 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点1 -> 节点0，神经元17 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点5 -> 节点0，神经元80 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点5 -> 节点0，神经元81 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点6 -> 节点0，神经元96 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点6 -> 节点0，神经元97 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点7 -> 节点0，神经元112 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点7 -> 节点0，神经元113 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点8 -> 节点0，神经元128 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点8 -> 节点0，神经元129 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点9 -> 节点0，神经元144 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点9 -> 节点0，神经元145 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点10 -> 节点0，神经元160 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点10 -> 节点0，神经元161 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点11 -> 节点0，神经元176 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点11 -> 节点0，神经元177 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点12 -> 节点0，神经元192 (vn=0)
SnnNIC[sendSpike:186]: 发送脉冲成功：节点12 -> 节点0，神经元193 (vn=0)
WeightLoader[handleMemoryResponse:100]: 🎉 所有权重写入操作已完成！
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 96
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 108
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 108
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 108
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 108
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 126
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 126
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 126
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 108
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 126
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 126
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 126
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 108
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 126
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 126
发送事件数: 0
SpikeSource[finish:98]: 进入finish阶段
=== SpikeSource最终统计 ===
加载事件数: 126
发送事件数: 0
NODE15: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点15]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE14: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点14]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE13: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点13]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE4: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点4]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE3: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点3]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE2: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点2]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
WeightLoader[finish:73]: 🏁 WeightLoader 完成
NODE0: 脉冲=150, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点0]最终统计：
  发送脉冲: 0
  接收脉冲: 0
  发送包: 0
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE1: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点1]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE5: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点5]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE6: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点6]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE7: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点7]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE8: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点8]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE9: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点9]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE10: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点10]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE11: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点11]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
NODE12: 脉冲=0, 激发=0
SnnNIC[finish:328]: 完成阶段
SnnNIC[节点12]最终统计：
  发送脉冲: 10
  接收脉冲: 0
  发送包: 10
  接收包: 0
  待发送队列: 0
  网络模式: SimpleNetwork
 router_0.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_0.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_0.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.send_bit_count.port4 : Accumulator : Sum.u64 = 76800; SumSQ.u64 = 39321600; Count.u64 = 150; Min.u64 = 512; Max.u64 = 512; 
 router_0.send_packet_count.port4 : Accumulator : Sum.u64 = 150; SumSQ.u64 = 150; Count.u64 = 150; Min.u64 = 1; Max.u64 = 1; 
 router_0.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.idle_time.port4 : Accumulator : Sum.u64 = 776800; SumSQ.u64 = 301811891760; Count.u64 = 15; Min.u64 = 1426; Max.u64 = 529792; 
 router_0.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.xbar_stalls.port0 : Accumulator : Sum.u64 = 168; SumSQ.u64 = 168; Count.u64 = 168; Min.u64 = 1; Max.u64 = 1; 
 router_0.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.xbar_stalls.port2 : Accumulator : Sum.u64 = 240; SumSQ.u64 = 240; Count.u64 = 240; Min.u64 = 1; Max.u64 = 1; 
 router_0.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_0.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_1.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.send_bit_count.port1 : Accumulator : Sum.u64 = 15360; SumSQ.u64 = 7864320; Count.u64 = 30; Min.u64 = 512; Max.u64 = 512; 
 router_1.send_packet_count.port1 : Accumulator : Sum.u64 = 30; SumSQ.u64 = 30; Count.u64 = 30; Min.u64 = 1; Max.u64 = 1; 
 router_1.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.idle_time.port1 : Accumulator : Sum.u64 = 955360; SumSQ.u64 = 417737995576; Count.u64 = 10; Min.u64 = 19344; Max.u64 = 630976; 
 router_1.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_1.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_1.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_1.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_2.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.send_bit_count.port1 : Accumulator : Sum.u64 = 10240; SumSQ.u64 = 5242880; Count.u64 = 20; Min.u64 = 512; Max.u64 = 512; 
 router_2.send_packet_count.port1 : Accumulator : Sum.u64 = 20; SumSQ.u64 = 20; Count.u64 = 20; Min.u64 = 1; Max.u64 = 1; 
 router_2.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.idle_time.port1 : Accumulator : Sum.u64 = 970240; SumSQ.u64 = 454727955448; Count.u64 = 7; Min.u64 = 19344; Max.u64 = 656272; 
 router_2.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_2.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_2.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_2.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.send_bit_count.port1 : Accumulator : Sum.u64 = 5120; SumSQ.u64 = 2621440; Count.u64 = 10; Min.u64 = 512; Max.u64 = 512; 
 router_3.send_packet_count.port1 : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 router_3.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.idle_time.port1 : Accumulator : Sum.u64 = 985120; SumSQ.u64 = 495557241016; Count.u64 = 4; Min.u64 = 93930; Max.u64 = 681568; 
 router_3.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_3.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_3.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_3.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_4.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_4.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.send_bit_count.port3 : Accumulator : Sum.u64 = 61440; SumSQ.u64 = 31457280; Count.u64 = 120; Min.u64 = 512; Max.u64 = 512; 
 router_4.send_packet_count.port3 : Accumulator : Sum.u64 = 120; SumSQ.u64 = 120; Count.u64 = 120; Min.u64 = 1; Max.u64 = 1; 
 router_4.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.idle_time.port3 : Accumulator : Sum.u64 = 821440; SumSQ.u64 = 323514794104; Count.u64 = 15; Min.u64 = 6138; Max.u64 = 555088; 
 router_4.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_4.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.xbar_stalls.port0 : Accumulator : Sum.u64 = 168; SumSQ.u64 = 168; Count.u64 = 168; Min.u64 = 1; Max.u64 = 1; 
 router_4.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.xbar_stalls.port2 : Accumulator : Sum.u64 = 275; SumSQ.u64 = 275; Count.u64 = 275; Min.u64 = 1; Max.u64 = 1; 
 router_4.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_4.xbar_stalls.port4 : Accumulator : Sum.u64 = 32; SumSQ.u64 = 32; Count.u64 = 32; Min.u64 = 1; Max.u64 = 1; 
 router_5.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_5.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.send_bit_count.port1 : Accumulator : Sum.u64 = 15360; SumSQ.u64 = 7864320; Count.u64 = 30; Min.u64 = 512; Max.u64 = 512; 
 router_5.send_packet_count.port1 : Accumulator : Sum.u64 = 30; SumSQ.u64 = 30; Count.u64 = 30; Min.u64 = 1; Max.u64 = 1; 
 router_5.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.idle_time.port1 : Accumulator : Sum.u64 = 955360; SumSQ.u64 = 417737995576; Count.u64 = 10; Min.u64 = 19344; Max.u64 = 630976; 
 router_5.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_5.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.send_bit_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.send_packet_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.idle_time.port3 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_5.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_5.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_5.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_6.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.send_bit_count.port1 : Accumulator : Sum.u64 = 10240; SumSQ.u64 = 5242880; Count.u64 = 20; Min.u64 = 512; Max.u64 = 512; 
 router_6.send_packet_count.port1 : Accumulator : Sum.u64 = 20; SumSQ.u64 = 20; Count.u64 = 20; Min.u64 = 1; Max.u64 = 1; 
 router_6.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.idle_time.port1 : Accumulator : Sum.u64 = 970240; SumSQ.u64 = 454727955448; Count.u64 = 7; Min.u64 = 19344; Max.u64 = 656272; 
 router_6.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_6.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.send_bit_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.send_packet_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.idle_time.port3 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_6.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_6.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_6.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.send_bit_count.port1 : Accumulator : Sum.u64 = 5120; SumSQ.u64 = 2621440; Count.u64 = 10; Min.u64 = 512; Max.u64 = 512; 
 router_7.send_packet_count.port1 : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 router_7.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.idle_time.port1 : Accumulator : Sum.u64 = 985120; SumSQ.u64 = 495557241016; Count.u64 = 4; Min.u64 = 93930; Max.u64 = 681568; 
 router_7.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_7.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.send_bit_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.send_packet_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.idle_time.port3 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_7.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_7.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_7.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_8.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_8.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.send_bit_count.port3 : Accumulator : Sum.u64 = 40960; SumSQ.u64 = 20971520; Count.u64 = 80; Min.u64 = 512; Max.u64 = 512; 
 router_8.send_packet_count.port3 : Accumulator : Sum.u64 = 80; SumSQ.u64 = 80; Count.u64 = 80; Min.u64 = 1; Max.u64 = 1; 
 router_8.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.idle_time.port3 : Accumulator : Sum.u64 = 880960; SumSQ.u64 = 353145492856; Count.u64 = 14; Min.u64 = 12090; Max.u64 = 580384; 
 router_8.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_8.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.xbar_stalls.port0 : Accumulator : Sum.u64 = 168; SumSQ.u64 = 168; Count.u64 = 168; Min.u64 = 1; Max.u64 = 1; 
 router_8.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.xbar_stalls.port2 : Accumulator : Sum.u64 = 275; SumSQ.u64 = 275; Count.u64 = 275; Min.u64 = 1; Max.u64 = 1; 
 router_8.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_8.xbar_stalls.port4 : Accumulator : Sum.u64 = 32; SumSQ.u64 = 32; Count.u64 = 32; Min.u64 = 1; Max.u64 = 1; 
 router_9.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_9.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.send_bit_count.port1 : Accumulator : Sum.u64 = 15360; SumSQ.u64 = 7864320; Count.u64 = 30; Min.u64 = 512; Max.u64 = 512; 
 router_9.send_packet_count.port1 : Accumulator : Sum.u64 = 30; SumSQ.u64 = 30; Count.u64 = 30; Min.u64 = 1; Max.u64 = 1; 
 router_9.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.idle_time.port1 : Accumulator : Sum.u64 = 955360; SumSQ.u64 = 417737995576; Count.u64 = 10; Min.u64 = 19344; Max.u64 = 630976; 
 router_9.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_9.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.send_bit_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.send_packet_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.idle_time.port3 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_9.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_9.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_9.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_10.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.send_bit_count.port1 : Accumulator : Sum.u64 = 10240; SumSQ.u64 = 5242880; Count.u64 = 20; Min.u64 = 512; Max.u64 = 512; 
 router_10.send_packet_count.port1 : Accumulator : Sum.u64 = 20; SumSQ.u64 = 20; Count.u64 = 20; Min.u64 = 1; Max.u64 = 1; 
 router_10.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.idle_time.port1 : Accumulator : Sum.u64 = 970240; SumSQ.u64 = 454727955448; Count.u64 = 7; Min.u64 = 19344; Max.u64 = 656272; 
 router_10.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_10.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.send_bit_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.send_packet_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.idle_time.port3 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_10.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_10.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_10.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.send_bit_count.port1 : Accumulator : Sum.u64 = 5120; SumSQ.u64 = 2621440; Count.u64 = 10; Min.u64 = 512; Max.u64 = 512; 
 router_11.send_packet_count.port1 : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 router_11.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.idle_time.port1 : Accumulator : Sum.u64 = 985120; SumSQ.u64 = 495557241016; Count.u64 = 4; Min.u64 = 93930; Max.u64 = 681568; 
 router_11.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.send_bit_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.send_packet_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.output_port_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.idle_time.port2 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_11.width_adj_count.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.send_bit_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.send_packet_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.idle_time.port3 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_11.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_11.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_11.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_12.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.send_bit_count.port3 : Accumulator : Sum.u64 = 20480; SumSQ.u64 = 10485760; Count.u64 = 40; Min.u64 = 512; Max.u64 = 512; 
 router_12.send_packet_count.port3 : Accumulator : Sum.u64 = 40; SumSQ.u64 = 40; Count.u64 = 40; Min.u64 = 1; Max.u64 = 1; 
 router_12.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.idle_time.port3 : Accumulator : Sum.u64 = 940480; SumSQ.u64 = 384587361400; Count.u64 = 13; Min.u64 = 18042; Max.u64 = 605680; 
 router_12.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_12.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_12.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_13.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.send_bit_count.port1 : Accumulator : Sum.u64 = 15360; SumSQ.u64 = 7864320; Count.u64 = 30; Min.u64 = 512; Max.u64 = 512; 
 router_13.send_packet_count.port1 : Accumulator : Sum.u64 = 30; SumSQ.u64 = 30; Count.u64 = 30; Min.u64 = 1; Max.u64 = 1; 
 router_13.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.idle_time.port1 : Accumulator : Sum.u64 = 955360; SumSQ.u64 = 417737995576; Count.u64 = 10; Min.u64 = 19344; Max.u64 = 630976; 
 router_13.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.send_bit_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.send_packet_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.idle_time.port3 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_13.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_13.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_13.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.send_bit_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.send_packet_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.output_port_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.idle_time.port0 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_14.width_adj_count.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.send_bit_count.port1 : Accumulator : Sum.u64 = 10240; SumSQ.u64 = 5242880; Count.u64 = 20; Min.u64 = 512; Max.u64 = 512; 
 router_14.send_packet_count.port1 : Accumulator : Sum.u64 = 20; SumSQ.u64 = 20; Count.u64 = 20; Min.u64 = 1; Max.u64 = 1; 
 router_14.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.idle_time.port1 : Accumulator : Sum.u64 = 970240; SumSQ.u64 = 454727955448; Count.u64 = 7; Min.u64 = 19344; Max.u64 = 656272; 
 router_14.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.send_bit_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.send_packet_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.idle_time.port3 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_14.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_14.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_14.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.send_bit_count.port1 : Accumulator : Sum.u64 = 5120; SumSQ.u64 = 2621440; Count.u64 = 10; Min.u64 = 512; Max.u64 = 512; 
 router_15.send_packet_count.port1 : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 router_15.output_port_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.idle_time.port1 : Accumulator : Sum.u64 = 985120; SumSQ.u64 = 495557241016; Count.u64 = 4; Min.u64 = 93930; Max.u64 = 681568; 
 router_15.width_adj_count.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.send_bit_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.send_packet_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.output_port_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.idle_time.port3 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_15.width_adj_count.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.send_bit_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.send_packet_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.output_port_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.idle_time.port4 : Accumulator : Sum.u64 = 1000000; SumSQ.u64 = 1000000000000; Count.u64 = 1; Min.u64 = 1000000; Max.u64 = 1000000; 
 router_15.width_adj_count.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.xbar_stalls.port0 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.xbar_stalls.port1 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.xbar_stalls.port2 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.xbar_stalls.port3 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 router_15.xbar_stalls.port4 : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_0.total_spikes_processed : Accumulator : Sum.u64 = 150; SumSQ.u64 = 150; Count.u64 = 150; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_0.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_0.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_0.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_0.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_0.avg_core_utilization : Accumulator : Sum.f64 = 0.037575; SumSQ.f64 = 0.001412; Count.u64 = 1; Min.f64 = 0.037575; Max.f64 = 0.037575; 
 multicore_pe_0.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_0.external_spikes_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_0.external_spikes_received : Accumulator : Sum.u64 = 150; SumSQ.u64 = 150; Count.u64 = 150; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_1.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_1.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_1.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_1.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_1.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_1.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_1.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_1.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_1.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_2.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_2.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_2.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_2.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_2.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_2.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_2.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_2.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_2.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_3.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_3.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_3.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_3.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_3.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_3.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_3.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_3.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_3.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_4.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_4.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_4.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_4.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_4.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_4.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_4.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_4.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_4.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_5.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_5.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_5.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_5.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_5.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_5.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_5.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_5.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_5.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_6.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_6.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_6.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_6.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_6.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_6.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_6.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_6.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_6.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_7.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_7.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_7.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_7.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_7.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_7.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_7.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_7.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_7.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_8.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_8.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_8.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_8.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_8.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_8.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_8.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_8.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_8.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_9.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_9.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_9.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_9.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_9.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_9.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_9.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_9.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_9.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_10.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_10.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_10.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_10.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_10.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_10.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_10.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_10.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_10.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_11.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_11.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_11.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_11.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_11.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_11.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_11.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_11.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_11.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_12.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_12.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_12.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_12.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_12.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_12.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_12.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_12.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_12.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_13.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_13.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_13.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_13.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_13.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_13.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_13.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_13.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_13.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_14.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_14.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_14.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_14.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_14.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_14.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_14.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_14.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_14.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_15.total_spikes_processed : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_15.inter_core_messages : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_15.l2_cache_hits : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_15.l2_cache_misses : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_15.memory_requests : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_15.avg_core_utilization : Accumulator : Sum.f64 = 0.000000; SumSQ.f64 = 0.000000; Count.u64 = 1; Min.f64 = 0.000000; Max.f64 = 0.000000; 
 multicore_pe_15.total_neurons_fired : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 multicore_pe_15.external_spikes_sent : Accumulator : Sum.u64 = 10; SumSQ.u64 = 10; Count.u64 = 10; Min.u64 = 1; Max.u64 = 1; 
 multicore_pe_15.external_spikes_received : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 0; Min.u64 = 0; Max.u64 = 0; 
 spike_source_0.events_loaded : Accumulator : Sum.u64 = 126; SumSQ.u64 = 15876; Count.u64 = 1; Min.u64 = 126; Max.u64 = 126; 
 spike_source_0.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_1.events_loaded : Accumulator : Sum.u64 = 126; SumSQ.u64 = 15876; Count.u64 = 1; Min.u64 = 126; Max.u64 = 126; 
 spike_source_1.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_2.events_loaded : Accumulator : Sum.u64 = 126; SumSQ.u64 = 15876; Count.u64 = 1; Min.u64 = 126; Max.u64 = 126; 
 spike_source_2.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_3.events_loaded : Accumulator : Sum.u64 = 108; SumSQ.u64 = 11664; Count.u64 = 1; Min.u64 = 108; Max.u64 = 108; 
 spike_source_3.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_4.events_loaded : Accumulator : Sum.u64 = 126; SumSQ.u64 = 15876; Count.u64 = 1; Min.u64 = 126; Max.u64 = 126; 
 spike_source_4.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_5.events_loaded : Accumulator : Sum.u64 = 126; SumSQ.u64 = 15876; Count.u64 = 1; Min.u64 = 126; Max.u64 = 126; 
 spike_source_5.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_6.events_loaded : Accumulator : Sum.u64 = 126; SumSQ.u64 = 15876; Count.u64 = 1; Min.u64 = 126; Max.u64 = 126; 
 spike_source_6.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_7.events_loaded : Accumulator : Sum.u64 = 108; SumSQ.u64 = 11664; Count.u64 = 1; Min.u64 = 108; Max.u64 = 108; 
 spike_source_7.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_8.events_loaded : Accumulator : Sum.u64 = 126; SumSQ.u64 = 15876; Count.u64 = 1; Min.u64 = 126; Max.u64 = 126; 
 spike_source_8.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_9.events_loaded : Accumulator : Sum.u64 = 126; SumSQ.u64 = 15876; Count.u64 = 1; Min.u64 = 126; Max.u64 = 126; 
 spike_source_9.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_10.events_loaded : Accumulator : Sum.u64 = 126; SumSQ.u64 = 15876; Count.u64 = 1; Min.u64 = 126; Max.u64 = 126; 
 spike_source_10.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_11.events_loaded : Accumulator : Sum.u64 = 108; SumSQ.u64 = 11664; Count.u64 = 1; Min.u64 = 108; Max.u64 = 108; 
 spike_source_11.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_12.events_loaded : Accumulator : Sum.u64 = 108; SumSQ.u64 = 11664; Count.u64 = 1; Min.u64 = 108; Max.u64 = 108; 
 spike_source_12.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_13.events_loaded : Accumulator : Sum.u64 = 108; SumSQ.u64 = 11664; Count.u64 = 1; Min.u64 = 108; Max.u64 = 108; 
 spike_source_13.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_14.events_loaded : Accumulator : Sum.u64 = 108; SumSQ.u64 = 11664; Count.u64 = 1; Min.u64 = 108; Max.u64 = 108; 
 spike_source_14.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
 spike_source_15.events_loaded : Accumulator : Sum.u64 = 96; SumSQ.u64 = 9216; Count.u64 = 1; Min.u64 = 96; Max.u64 = 96; 
 spike_source_15.events_sent : Accumulator : Sum.u64 = 0; SumSQ.u64 = 0; Count.u64 = 1; Min.u64 = 0; Max.u64 = 0; 
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
MultiCorePE[~MultiCorePE:117]: 🗑️ 销毁MultiCorePE组件
MultiCorePE[~OptimizedInternalRing:150]: 🗑️ 销毁优化的环形网络
MultiCorePE[~OptimizedInternalRing:153]: 📊 最终统计: 总消息数=0, 平均延迟=0.00周期
MultiCorePE[~MultiCoreController:1082]: 🗑️ 销毁多核控制器
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心3
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心2
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心1
SnnPESubComponent[~SnnPESubComponent:116]: 🗑️ 销毁SnnPE SubComponent核心0
Simulation is complete, simulated time: 1 us
